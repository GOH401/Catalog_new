import os
import random
from django.conf import settings
from catalog.models import Carpet, Collection

source_dir = os.path.join(settings.MEDIA_ROOT, 'tron')
collection_id = 10

try:
    collection = Collection.objects.get(id=collection_id)
except Collection.DoesNotExist:
    print(f"‚ùå –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å ID={collection_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    exit()

STYLE_CHOICES = ['modern', 'classic', 'abstraction']
MATERIALS = ['–ü–æ–ª–∏—ç—Å—Ç–µ—Ä', '–®–µ—Ä—Å—Ç—å', '–•–ª–æ–ø–æ–∫', '–í–∏—Å–∫–æ–∑–∞', '–ê–∫—Ä–∏–ª']
DENSITIES = ['1200 –≥/–º¬≤', '1500 –≥/–º¬≤', '1700 –≥/–º¬≤', '2000 –≥/–º¬≤']
HEIGHTS = ['6 –º–º', '8 –º–º', '10 –º–º', '12 –º–º']
WEIGHTS = ['2.1 –∫–≥/–º¬≤', '2.5 –∫–≥/–º¬≤', '2.7 –∫–≥/–º¬≤', '3.0 –∫–≥/–º¬≤']
BACKINGS = ['–î–∂—É—Ç', '–•–ª–æ–ø–∫–æ–≤–∞—è –æ—Å–Ω–æ–≤–∞', '–ü–æ–ª–∏—ç—Å—Ç–µ—Ä']
METHODS = ['–ú–∞—à–∏–Ω–Ω–æ–µ', '–¢–∫–∞—á–µ—Å—Ç–≤–æ', '–¢–∞—Ñ—Ç–∏–Ω–≥']

created = 0
skipped = 0

for filename in os.listdir(source_dir):
    if not filename.lower().endswith(('.jpg', '.jpeg', '.png', '.webp')):
        continue

    name_no_ext = os.path.splitext(filename)[0]

    if '_' not in name_no_ext:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª –±–µ–∑ '_': {filename}")
        skipped += 1
        continue

    code = name_no_ext.split('_')[0]
    color = "_".join(name_no_ext.split('_')[1:])
    image_path = f"carpets/{filename}"

    if Carpet.objects.filter(code=code, color=color, collection=collection).exists():
        print(f"üîÅ –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {filename}")
        skipped += 1
        continue

    Carpet.objects.create(
        collection=collection,
        name=name_no_ext,
        code=code,
        color=color,
        image=image_path,
        style=random.choice(STYLE_CHOICES),
        material=random.choice(MATERIALS),
        density=random.choice(DENSITIES),
        pile_height=random.choice(HEIGHTS),
        weight=random.choice(WEIGHTS),
        backing=random.choice(BACKINGS),
        manufacturing_method=random.choice(METHODS),
    )
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {name_no_ext}")
    created += 1

print(f"\nüéâ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {created}, –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")
